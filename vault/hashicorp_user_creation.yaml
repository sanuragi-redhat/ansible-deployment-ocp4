---
- name: Create Vault admin user with token
  hosts: vault
  gather_facts: no
  vars:
    vault_addr: "http://127.0.0.1:8200"   # Vault server address
    vault_root_token: "s.xxxxxxx"         # Root token
    admin_username: "adminuser"
    admin_password: "Admin@123"
    admin_policy_name: "admin"

  tasks:

    - name: Enable userpass auth method
      ansible.builtin.command:
        cmd: "vault auth enable userpass"
        environment:
          VAULT_ADDR: "{{ vault_addr }}"
          VAULT_TOKEN: "{{ vault_root_token }}"
      register: enable_userpass
      failed_when: "'already enabled' not in enable_userpass.stderr and enable_userpass.rc != 0"
      ignore_errors: yes

    - name: Create admin policy file
      ansible.builtin.copy:
        dest: "/tmp/{{ admin_policy_name }}.hcl"
        content: |
          path "*" {
            capabilities = ["create", "read", "update", "delete", "list", "sudo"]
          }

    - name: Apply admin policy
      ansible.builtin.command:
        cmd: "vault policy write {{ admin_policy_name }} /tmp/{{ admin_policy_name }}.hcl"
        environment:
          VAULT_ADDR: "{{ vault_addr }}"
          VAULT_TOKEN: "{{ vault_root_token }}"

    - name: Create Vault admin user
      ansible.builtin.command:
        cmd: >
          vault write auth/userpass/users/{{ admin_username }}
          password='{{ admin_password }}'
          policies='{{ admin_policy_name }}'
        environment:
          VAULT_ADDR: "{{ vault_addr }}"
          VAULT_TOKEN: "{{ vault_root_token }}"

    - name: Create a long-lived token for admin user
      ansible.builtin.command:
        cmd: >
          vault token create -policy="{{ admin_policy_name }}" -orphan -ttl="8760h" -format=json
        environment:
          VAULT_ADDR: "{{ vault_addr }}"
          VAULT_TOKEN: "{{ vault_root_token }}"
      register: vault_token_output

    - name: Show admin token
      ansible.builtin.debug:
        msg: "{{ vault_token_output.stdout | from_json | json_query('auth.client_token') }}"

