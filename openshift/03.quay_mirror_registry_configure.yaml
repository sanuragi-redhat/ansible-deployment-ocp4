---
- name: Configure Mirror Registry for OpenShift
  hosts: quay
  become: true
  vars:
    rhsm_username: "rh-user"
    rhsm_password: "rh-pass"
    rhsm_pool: ""  # Optional: specify subscription pool ID if needed
    mirror_registry_version: "1.3.11"
    mirror_registry_tarball: "mirror-registry.tar.gz"
    registry_install_dir: /opt/mirror-registry
    registry_data_dir: /opt/registry
    registry_port: 8443

  tasks:
    - name: 1. Unregister system if already registered (optional cleanup)
      ansible.builtin.command: subscription-manager unregister
      ignore_errors: true

    - name: 2. Clean subscription data
      ansible.builtin.command: subscription-manager clean
      ignore_errors: true

    - name: 3. Register system to Red Hat
      ansible.builtin.command: >
        subscription-manager register
        --username {{ rhsm_username }}
        --password {{ rhsm_password }}
      register: register_output
      changed_when: "'The system has been registered' in register_output.stdout"
      no_log: true

    - name: 4. Attach available subscription (auto-attach)
      ansible.builtin.command: subscription-manager attach --auto
      register: attach_output
      changed_when: "'Successfully attached' in attach_output.stdout"
      ignore_errors: true

    - name: 5. Enable required repositories
      ansible.builtin.command: >
        subscription-manager repos
        --enable=rhel-9-for-x86_64-baseos-rpms
        --enable=rhel-9-for-x86_64-appstream-rpms
      register: repos_output
      changed_when: "'enabled' in repos_output.stdout"

    - name: 6. Ensure required packages are installed
      ansible.builtin.package:
        name:
          - podman
          - httpd-tools
          - tar
        state: present

    - name: 7. Create registry directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: "0755"
      loop:
        - "{{ registry_install_dir }}"
        - "{{ registry_data_dir }}"
        - /var/quay-mirror 

    - name: 8. Extract Mirror Registry package
      ansible.builtin.unarchive:
        src: "{{ registry_install_dir }}/{{ mirror_registry_tarball }}"
        dest: "{{ registry_install_dir }}"
        remote_src: true

    - name: 9. Run Mirror Registry install script
      ansible.builtin.shell:
        cmd: ./mirror-registry install --quayHostname $(hostname) --initUser quayadmin --initPassword quayadmin --quayStorage /var/quay-mirror --quayRoot /var/quay-mirror 
      args:
        chdir: "{{ registry_install_dir }}"
      register: install_output
      changed_when: "'Quay installed successfully' in install_output.stdout"

    - name: 10. Ensure Mirror Registry service is running
      ansible.builtin.command: podman ps
      register: podman_ps
      changed_when: false

    - name: 11. Copy root-CA certificate
      ansible.builtin.copy:
        src: /var/quay-mirror/quay-rootCA/rootCA.pem
        dest: /etc/pki/ca-trust/source/anchors/rootCA.pem
        owner: root
        group: root
        mode: "0644"
        remote_src: true
      ignore_errors: true
      tags: one 

    - name: 12. Update CA trust
      ansible.builtin.command: update-ca-trust
      ignore_errors: true
      tags: two 

    - name: 13. Display Mirror Registry status
      ansible.builtin.debug:
        msg:
          - "Mirror Registry is running at: https://{{ ansible_fqdn }}:{{ registry_port }}"
          - "Admin credentials: admin / redhat123"
          - "Registry root: {{ registry_data_dir }}"
      tags: three


