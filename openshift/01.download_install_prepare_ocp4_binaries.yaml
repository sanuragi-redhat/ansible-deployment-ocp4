
---
- name: 1. OpenShift Downloading Binaries and Placement
  hosts: service
  become: true
  vars:
    # Version variables
    ocp_version: "4.19.18"
    mirror_registry_version: "1.3.11"

    # Download URLs
    oc_mirror_url: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ ocp_version }}/oc-mirror.tar.gz"
    oc_client_url: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.19.18/openshift-client-linux-amd64-rhel8-{{ ocp_version }}.tar.gz"
    oc_install_url: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ ocp_version }}/openshift-install-linux.tar.gz"
    mirror_registry_url: "https://developers.redhat.com/content-gateway/file/pub/openshift-v4/clients/mirror-registry/{{ mirror_registry_version }}/mirror-registry.tar.gz"

    # Destination paths
    download_dir: /tmp/openshift-tools
    mirror_dir: /tmp/mirror-registry
    install_dir: /usr/bin

  tasks:
    - name: 1. Create temporary ocp binaries directory - /tmp/openshift-tools
      ansible.builtin.file:
        path: "{{ download_dir }}"
        state: directory
        mode: '0755'

    - name: 2. Create temporary mirror-registry directory /tmp/mirror-registry
      ansible.builtin.file:
        path: "{{ mirror_dir }}"
        state: directory
        mode: '0755'

    - name: 3. Download oc-mirror binaries
      ansible.builtin.get_url:
        url: "{{ oc_mirror_url }}"
        dest: "{{ download_dir }}/oc-mirror.tar.gz"
        mode: '0644'

    - name: 4. Download OpenShift Client (oc & kubectl) binary
      ansible.builtin.get_url:
        url: "{{ oc_client_url }}"
        dest: "{{ download_dir }}/openshift-client-linux.tar.gz"
        mode: '0644'

    - name: 5. Download OpenShift Installer binary
      ansible.builtin.get_url:
        url: "{{ oc_install_url }}"
        dest: "{{ download_dir }}/openshift-install-linux.tar.gz"
        mode: '0644'

    - name: 6. Download Mirror Registry 
      ansible.builtin.get_url:
        url: "{{ mirror_registry_url }}"
        dest: "{{ mirror_dir }}/mirror-registry.tar.gz"
        mode: '0644'

    - name: 7. Extract all ocp binaries tarballs 
      ansible.builtin.unarchive:
        src: "{{ item }}"
        dest: "{{ install_dir }}"
        remote_src: true
      loop:
        - "{{ download_dir }}/oc-mirror.tar.gz"
        - "{{ download_dir }}/openshift-client-linux.tar.gz"
        - "{{ download_dir }}/openshift-install-linux.tar.gz"
        - "{{ mirror_dir }}/mirror-registry.tar.gz"

    - name: 8. Ensure binaries are executable
      ansible.builtin.file:
        path: "{{ item }}"
        mode: '0755'
      loop:
        - "{{ install_dir }}/oc"
        - "{{ install_dir }}/kubectl"
        - "{{ install_dir }}/oc-mirror"
        - "{{ install_dir }}/openshift-install"
#       - "{{ install_dir }}/mirror-registry"
      ignore_errors: true  # some archives may not contain all files

    - name: 9. Clean up temporary directories but not mirror-registry directory
      ansible.builtin.file:
        path: "{{ download_dir }}"
        state: absent

    - name: 10. Verify installation - oc version
      ansible.builtin.command: oc version --client
      register: oc_version_output
      ignore_errors: true

    - name: 11. Display oc version
      ansible.builtin.debug:
        msg: "{{ oc_version_output.stdout }}"
